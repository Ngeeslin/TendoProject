{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ebgee\\\\projects\\\\tendoApp\\\\survey\\\\src\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"./axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form(props) {\n  _s();\n\n  const [patient, setPatient] = useState();\n  const [doctor, setDoctor] = useState();\n  const [diagnosis, setDiagnosis] = useState();\n  const [surveyPage, setSurveyPage] = useState(0);\n  const [surveyResults, setSurveyResults] = useState({});\n  const [input, setInput] = useState();\n  const [textInput, setTextInput] = useState();\n  const [error, setError] = useState();\n  useEffect(() => {\n    if (props) {\n      setPatient(props.entry[0]); //a better way would be to search through for resourceType\n\n      setDoctor(props.entry[1]);\n      setDiagnosis(props.entry[3]);\n      setSurveyPage(1);\n    }\n  }, [props]);\n\n  const setRating = () => {\n    if (input) {\n      setSurveyResults({\n        rating: input\n      });\n      setInput(null);\n      setSurveyPage(2);\n    } else {\n      setError(true);\n    }\n  };\n\n  const setExplination = () => {\n    if (input && textInput) {\n      let newSurveyResults = surveyResults;\n      newSurveyResults.explination = {\n        helpful: input,\n        explination: textInput\n      };\n      setSurveyResults(newSurveyResults);\n      setInput(null);\n      setTextInput(null);\n      setSurveyPage(3);\n    } else {\n      setError(true);\n    }\n  };\n\n  const setFeeling = () => {\n    if (textInput) {\n      let newSurveyResults = surveyResults;\n      newSurveyResults.feeling = textInput;\n      setSurveyResults(newSurveyResults);\n      setTextInput(null);\n      setSurveyPage(4);\n      axios.put(\"survey\", surveyResults);\n    } else {\n      setError(true);\n    }\n  };\n\n  function errorMessage() {\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please fill out all fields before submitting.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  function doctorRatingReaction() {\n    const rating = surveyResults.rating;\n\n    if (rating <= 3) {\n      return \"Oh no! We are sorry that you would not recommend Dr.\" + doctor.resource.name[0].family;\n    } else if (rating <= 6) {\n      return \"Well thats pretty good, but hopefully we can find you someone better next time.\";\n    } else {\n      return \"Thats great that you liked Dr.\" + doctor.resource.name[0].family + \"!\";\n    }\n  }\n\n  function getDiagnosisExplinationReaction() {\n    if (surveyResults.explination.helpful === 'Yes') {\n      return \"your doctor explained how to manage the diagnosis well, \";\n    }\n\n    return \"your doctor did not explain how to manage the diagnosis well, \";\n  }\n\n  function getSurveyPage() {\n    switch (surveyPage) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Hi \", patient.resource.name[0].given[0], \", on a scale of 1-10, would you recommend Dr.\", doctor.resource.name[0].family, \" to a friend or family member? 1 = Would not recommend, 10 = Would strongly recommend\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"rating\",\n            name: \"rating\",\n            min: \"1\",\n            max: \"10\",\n            onInput: e => setInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            onClick: setRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this), errorMessage()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Thank you. You were diagnosed with \", diagnosis.resource.code.coding[0].name, \". Did Dr.\", doctor.resource.name[0].family, \" explain how to manage this diagnosis in a way you could understand?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"yes_no\",\n            onClick: () => setInput('Yes')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 80\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"yes_no\",\n            onClick: () => setInput('No')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 79\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Please Explain:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onInput: e => setTextInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            onClick: setExplination\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), errorMessage()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"We appreciate the feedback, one last question: how do you feel about being diagnosed with \", diagnosis.resource.code.coding[0].name, \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            onInput: e => setTextInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            onClick: setFeeling\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), errorMessage()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this);\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Thanks again! Here's what we heard:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You gave your doctor a \", surveyResults.rating, \" out of 10. \", doctorRatingReaction()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You also said that \", getDiagnosisExplinationReaction(), \" saying \", surveyResults.explination.explination]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Finally, you said: \\\"\", surveyResults.feeling, \"\\\" about your feelings on the diagnosis.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this);\n\n      default:\n        return \"Loading...\";\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: getSurveyPage()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"CBqUz8n8FIFrFfLhl4DEZNZvV0g=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/ebgee/projects/tendoApp/survey/src/Form.js"],"names":["React","useEffect","useState","axios","Form","props","patient","setPatient","doctor","setDoctor","diagnosis","setDiagnosis","surveyPage","setSurveyPage","surveyResults","setSurveyResults","input","setInput","textInput","setTextInput","error","setError","entry","setRating","rating","setExplination","newSurveyResults","explination","helpful","setFeeling","feeling","put","errorMessage","doctorRatingReaction","resource","name","family","getDiagnosisExplinationReaction","getSurveyPage","given","e","target","value","code","coding"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"./axios\";\r\n\r\nexport default function Form(props) {\r\n  const [patient, setPatient] = useState();\r\n  const [doctor, setDoctor] = useState();\r\n  const [diagnosis, setDiagnosis] = useState();\r\n  const [surveyPage, setSurveyPage] = useState(0);\r\n  const [surveyResults, setSurveyResults] = useState({});\r\n  const [input, setInput] = useState();\r\n  const [textInput, setTextInput] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    if(props){\r\n      setPatient(props.entry[0]); //a better way would be to search through for resourceType\r\n      setDoctor(props.entry[1]);\r\n      setDiagnosis(props.entry[3]);\r\n      setSurveyPage(1);\r\n    }\r\n  }, [props])\r\n\r\n  const setRating = () => {\r\n    if(input){\r\n      setSurveyResults({rating: input});\r\n    setInput(null);\r\n    setSurveyPage(2);\r\n    }\r\n    else {\r\n      setError(true);\r\n    }\r\n  }\r\n\r\n  const setExplination = () => {\r\n    if(input && textInput){\r\n      let newSurveyResults = surveyResults;\r\n      newSurveyResults.explination = {helpful: input, explination: textInput};\r\n      setSurveyResults(newSurveyResults);\r\n      setInput(null);\r\n      setTextInput(null);\r\n      setSurveyPage(3);\r\n    }\r\n    else {\r\n      setError(true);\r\n    }\r\n  }\r\n\r\n  const setFeeling = () => {\r\n    if(textInput) {\r\n      let newSurveyResults = surveyResults;\r\n    newSurveyResults.feeling = textInput;\r\n    setSurveyResults(newSurveyResults);\r\n    setTextInput(null);\r\n    setSurveyPage(4);\r\n    axios.put(\"survey\", surveyResults);\r\n    }\r\n    else {\r\n      setError(true);\r\n    }\r\n  }\r\n\r\n  function errorMessage() {\r\n    if(error){\r\n      return <p>Please fill out all fields before submitting.</p>\r\n    }\r\n  }\r\n\r\n  function doctorRatingReaction(){\r\n    const rating = surveyResults.rating;\r\n    if(rating <= 3) {\r\n      return \"Oh no! We are sorry that you would not recommend Dr.\" + doctor.resource.name[0].family;\r\n    } else if(rating <=6){\r\n      return \"Well thats pretty good, but hopefully we can find you someone better next time.\"\r\n    } else {\r\n      return \"Thats great that you liked Dr.\" + doctor.resource.name[0].family + \"!\";\r\n    }\r\n  }\r\n\r\n  function getDiagnosisExplinationReaction(){\r\n    if(surveyResults.explination.helpful === 'Yes') {\r\n      return \"your doctor explained how to manage the diagnosis well, \";\r\n    }\r\n    return \"your doctor did not explain how to manage the diagnosis well, \";\r\n  }\r\n\r\n  function getSurveyPage() {\r\n    switch(surveyPage) {\r\n      case(1):\r\n        return(\r\n        <div>\r\n          <p>Hi {patient.resource.name[0].given[0]}, on a scale of 1-10, would you recommend Dr.{doctor.resource.name[0].family} to a friend or family member? 1 = Would not recommend, 10 = Would strongly recommend</p>\r\n          <input type=\"number\" id=\"rating\" name=\"rating\" min=\"1\" max=\"10\" onInput={(e) => setInput(e.target.value)}></input>\r\n          <input type=\"submit\" onClick={setRating}></input>\r\n          {errorMessage()}\r\n        </div>\r\n        );\r\n      case(2):\r\n          return(\r\n          <div>\r\n            <p>Thank you. You were diagnosed with {diagnosis.resource.code.coding[0].name}. Did Dr.{doctor.resource.name[0].family} explain how to manage this diagnosis in a way you could understand?</p>\r\n            <input type=\"radio\" name=\"yes_no\" onClick={() => setInput('Yes')}/><span>Yes</span>\r\n            <input type=\"radio\" name=\"yes_no\" onClick={() => setInput('No')}/><span>No</span>\r\n            <div>Please Explain:</div>\r\n            <input type=\"text\" onInput={(e) => setTextInput(e.target.value)}/>\r\n            <input type=\"submit\" onClick={setExplination}></input>\r\n            {errorMessage()}\r\n          </div>\r\n          )\r\n      case(3):\r\n            return(\r\n              <div>\r\n                <p>We appreciate the feedback, one last question: how do you feel about being diagnosed with {diagnosis.resource.code.coding[0].name}?</p>\r\n                <input type=\"text\" value={input} onInput={(e) => setTextInput(e.target.value)}/>\r\n                <input type=\"submit\" onClick={setFeeling}></input>\r\n                {errorMessage()}\r\n              </div>\r\n            )\r\n      case(4):\r\n            return (\r\n              <div>\r\n                <p>Thanks again! Here's what we heard:</p>\r\n                <p>You gave your doctor a {surveyResults.rating} out of 10. {doctorRatingReaction()}</p>\r\n                <p>You also said that {getDiagnosisExplinationReaction()} saying {surveyResults.explination.explination}</p>\r\n                <p>Finally, you said: \"{surveyResults.feeling}\" about your feelings on the diagnosis.</p>\r\n              </div>\r\n            )\r\n      default:\r\n        return \"Loading...\";\r\n    }\r\n  }\r\n  return(\r\n    <p>\r\n      {getSurveyPage()}\r\n    </p>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}