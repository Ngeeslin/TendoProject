{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ebgee\\\\projects\\\\tendoApp\\\\survey\\\\src\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form(props) {\n  _s();\n\n  const [patient, setPatient] = useState();\n  const [doctor, setDoctor] = useState();\n  const [appointment, setAppointment] = useState();\n  const [diagnosis, setDiagnosis] = useState();\n  const [surveyPage, setSurveyPage] = useState(0);\n  const [suveryResults, setSurveyResults] = useState({});\n  useEffect(() => {\n    if (props) {\n      setPatient(props.entry[0]); //a better way would be to search through for resourceType\n\n      setDoctor(props.entry[1]);\n      setAppointment(props.entry[2]);\n      setDiagnosis(props.entry[3]);\n      setSurveyPage(1);\n    }\n  });\n\n  function setRating() {}\n\n  function getSurveyPage() {\n    switch (surveyPage) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Hi \", patient.resource.name[0].given[0], \", on a scale of 1-10, would you recommend Dr.\", doctor.resource.name[0].family, \" to a friend or family member? 1 = Would not recommend, 10 = Would strongly recommend\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"rating\",\n            name: \"rating\",\n            min: \"1\",\n            max: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            onClick: setRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this);\n\n      default:\n        return \"Loading...\";\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: getSurveyPage()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"RMYwES5SRQ9/7zYy7yAuc4SRO5U=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/ebgee/projects/tendoApp/survey/src/Form.js"],"names":["React","useEffect","useState","Form","props","patient","setPatient","doctor","setDoctor","appointment","setAppointment","diagnosis","setDiagnosis","surveyPage","setSurveyPage","suveryResults","setSurveyResults","entry","setRating","getSurveyPage","resource","name","given","family"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AACA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAClC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,EAAtC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,EAApC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,EAA9C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,EAA1C;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGG,KAAH,EAAS;AACPE,MAAAA,UAAU,CAACF,KAAK,CAACa,KAAN,CAAY,CAAZ,CAAD,CAAV,CADO,CACqB;;AAC5BT,MAAAA,SAAS,CAACJ,KAAK,CAACa,KAAN,CAAY,CAAZ,CAAD,CAAT;AACAP,MAAAA,cAAc,CAACN,KAAK,CAACa,KAAN,CAAY,CAAZ,CAAD,CAAd;AACAL,MAAAA,YAAY,CAACR,KAAK,CAACa,KAAN,CAAY,CAAZ,CAAD,CAAZ;AACAH,MAAAA,aAAa,CAAC,CAAD,CAAb;AACD;AACF,GARQ,CAAT;;AAUA,WAASI,SAAT,GAAqB,CAEpB;;AAED,WAASC,aAAT,GAAyB;AACvB,YAAON,UAAP;AACE,WAAK,CAAL;AACE,4BACA;AAAA,kCACE;AAAA,8BAAOR,OAAO,CAACe,QAAR,CAAiBC,IAAjB,CAAsB,CAAtB,EAAyBC,KAAzB,CAA+B,CAA/B,CAAP,mDAAuFf,MAAM,CAACa,QAAP,CAAgBC,IAAhB,CAAqB,CAArB,EAAwBE,MAA/G;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,EAAE,EAAC,QAAxB;AAAiC,YAAA,IAAI,EAAC,QAAtC;AAA+C,YAAA,GAAG,EAAC,GAAnD;AAAuD,YAAA,GAAG,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,OAAO,EAAEL;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA;;AAOF;AACE,eAAO,YAAP;AAVJ;AAYD;;AACD,sBACE;AAAA,cACGC,aAAa;AADhB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAzCuBhB,I;;KAAAA,I","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nexport default function Form(props) {\r\n  const [patient, setPatient] = useState();\r\n  const [doctor, setDoctor] = useState();\r\n  const [appointment, setAppointment] = useState();\r\n  const [diagnosis, setDiagnosis] = useState();\r\n  const [surveyPage, setSurveyPage] = useState(0);\r\n  const [suveryResults, setSurveyResults] = useState({});\r\n\r\n  useEffect(() => {\r\n    if(props){\r\n      setPatient(props.entry[0]); //a better way would be to search through for resourceType\r\n      setDoctor(props.entry[1]);\r\n      setAppointment(props.entry[2]);\r\n      setDiagnosis(props.entry[3]);\r\n      setSurveyPage(1);\r\n    }\r\n  })\r\n\r\n  function setRating() {\r\n\r\n  }\r\n\r\n  function getSurveyPage() {\r\n    switch(surveyPage) {\r\n      case(1):\r\n        return(\r\n        <div>\r\n          <p>Hi {patient.resource.name[0].given[0]}, on a scale of 1-10, would you recommend Dr.{doctor.resource.name[0].family} to a friend or family member? 1 = Would not recommend, 10 = Would strongly recommend</p>\r\n          <input type=\"number\" id=\"rating\" name=\"rating\" min=\"1\" max=\"10\"></input>\r\n          <input type=\"submit\" onClick={setRating}></input>\r\n        </div>\r\n        );\r\n      default:\r\n        return \"Loading...\";\r\n    }\r\n  }\r\n  return(\r\n    <p>\r\n      {getSurveyPage()}\r\n    </p>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}